## .crt secret was created manually

global:
  image:
    tag: "v2.5.8"

dex:
  extraArgs:
   - --disable-tls

configs:
  params:
    server.insecure: false
  cm:
    exec.enabled: true
    url: xx
    dex.config: |
      connectors:
        - type: ldap
          id: ldap
          name: xx
          config:
            insecureNoSSL: false
            host: xx
            bindDN: >-
              CN=SVC1_openshift_ADintegration,OU=T1-Service Accounts,OU=Tier
              1,OU=Admin,xx
            bindPW: openshift-ldap-secret
            userSearch:
              preferredUsernameAttr: sAMAccountName
              idAttr: sAMAccountName
              emailAttr: mail
              nameAttr: displayName
            rootCAData: $ca-certs:ca-bundle.crt

    resource.customizations: |
      networking.k8s.io/Ingress:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs

  rbac:
    policy.default: 'role:admin'
    policy.csv: |
      p, role:admin, exec, create, */*, allow
#      g, AWS_DevOps, role:admin

  credentialTemplates:
    https-creds:
      url: xx
      password: 123
      username: argocd

  repositories:
  #   sample-charts:
  #     url: <helm-chart-url>
  #     name: xxxx-charts
  #     type: helm
  #     password: ${argocd_bitbucket_token}
  #     username: argocd
    app-manifests:
      url: xx
      name: app-manifests
      type: git

redis-ha:
  enabled: true

controller:
  replicas: 1

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2

applicationSet:
  replicaCount: 2

server:
  autoscaling:
    enabled: true
    minReplicas: 2
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      # cert-manager.io/cluster-issuer: letsencrypt-prod
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

    hosts:
      - xx
    https: true
    tls:
    - secretName: argocd-server-tls
      hosts:
        - xx

  certificate:
    # -- Deploy a Certificate resource (requires cert-manager)
    enabled: true
    # -- The name of the Secret that will be automatically created and managed by this Certificate resource
    secretName: argocd-server-tls
    # -- Certificate primary domain (commonName)
    domain: xx
    issuer:
      # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`
      group: "cert-manager.io"
      # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`
      kind: "ClusterIssuer"
      # -- Certificate isser name. Eg. `letsencrypt`
      name: "letsencrypt-prod"